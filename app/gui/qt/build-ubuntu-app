#!/bin/bash

#Fail script on first error encountered
set -e

#Application/library versions built by this script.
SUPERCOLLIDER_VERSION=3.8.0
SC_PLUGINS_VERSION=${SUPERCOLLIDER_VERSION}
AUBIO_VERSION=0.4.5
OSMID_VERSION=391f35f789f18126003d2edf32902eb714726802

#Internal definitions
SP_QT_APP_SRC_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SRC_DIR=${SP_QT_APP_SRC_DIR}/../../../../
OSMID_DIR=${SP_QT_APP_SRC_DIR}/../../server/native/linux/osmid
UBUNTU_RELEASE=`lsb_release -rs | sed -e 's/\.//'`
echo ${UBUNTU_RELEASE}

echo "This script has been tested on ubuntu 16.04, it should work on ubuntu 15.10."
echo "14.04 users may need to install some of the dependencies by hand from source"
echo "We're working to make this script a one shot solution for all Linux platforms"
echo "Please direct rage and suggestions to Factoid in (https://gitter.im/samaaron/sonic-pi)"

#Install dependencies for building supercollider, as well as qt5 and supporting libraries for gui
sudo apt-get install -y \
     build-essential \
     cmake \
     curl \
     erlang-base \
     git \
     libasound2-dev \
     libaubio-dev \
     libavahi-client-dev \
     libffi-dev \
     libfftw3-dev \
     libicu-dev \
     libjack-jackd2-dev \
     libqt5scintilla2-dev \
     libqt5sensors5-dev \
     libqt5svg5-dev \
     libqt5webkit5-dev \
     libqwt-qt5-dev \
     libreadline6-dev \
     libsndfile1-dev \
     libudev-dev \
     libxt-dev \
     pkg-config \
     python \
     qt5-default \
     qt5-qmake \
     qtdeclarative5-dev \
     qtmultimedia5-dev \
     qtpositioning5-dev \
     qttools5-dev \
     qttools5-dev-tools \
     ruby \
     ruby-dev

if [ ${UBUNTU_RELEASE} -ge 1704 ]
then
    sudo apt-get install -y libboost1.62-dev
else
    sudo apt-get install -y libboost1.58-dev
fi

### IF YOU HAVE PROBLEMS WITH qwt
#cd ${SRC_DIR}
#wget 'http://downloads.sourceforge.net/project/qwt/qwt/6.1.2/qwt-6.1.2.tar.bz2'
#tar -xf qwt-6.1.2.tar.bz2
#cd qwt-6.1.2
#/usr/lib/x86_64-linux-gnu/qt5/bin/qmake qwt.pro
#make
#sudo make install
#sudo cp /usr/local/qwt-6.1.2/features/* /usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/

### IF YOU HAVE PROBLEMS WITH qscintilla2
#cd ${SRC_DIR}
#wget 'http://sourceforge.net/projects/pyqt/files/QScintilla2/QScintilla-2.9.2/QScintilla_gpl-2.9.2.tar.gz'
#tar -xf QScintilla_gpl-2.9.2.tar.gz
#cd QScintilla_gpl-2.9.2/Qt4Qt5/
#/usr/lib/x86_64-linux-gnu/qt5/bin/qmake qscintilla.pro
#make
#sudo make install

cd ${SRC_DIR}
if [ ! -d supercollider ]
then
    git clone https://github.com/supercollider/supercollider.git
fi
cd supercollider
git fetch origin
git checkout Version-${SUPERCOLLIDER_VERSION}
git submodule init && git submodule update
mkdir -p build
cd build
cmake -DSC_EL=no ..
make
sudo make install
#This should install to /usr/local/

#Build sc3 plugins and install to /usr/local/ so supercollider can find them
cd ${SRC_DIR}
if [ ! -d sc3-plugins ]
then
    git clone https://github.com/supercollider/sc3-plugins.git
fi
cd sc3-plugins
git fetch origin
git checkout Version-${SC_PLUGINS_VERSION}
git submodule init && git submodule update
cp -r external_libraries/nova-simd/* source/VBAPUGens
mkdir -p build
cd build
cmake -DSC_PATH=/usr/local/include/SuperCollider -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Release ..
make
sudo make install

#Install libaubio (apt-get version is too old)
cd ${SRC_DIR}
if [ ! -d aubio ]
then
    git clone https://git.aubio.org/git/aubio/
fi
cd aubio
git fetch origin
git checkout ${AUBIO_VERSION}
make getwaf
./waf configure
./waf build
sudo ./waf install

#Install osmid (for MIDI support)
cd ${SRC_DIR}
if [ ! -d osmid ]
then
   git clone https://github.com/llloret/osmid.git
fi
cd osmid
git fetch origin
git checkout ${OSMID_VERSION}
mkdir -p build
cd build
cmake ..
make
mkdir -p ${OSMID_DIR}
install m2o o2m -t ${OSMID_DIR}

#Build Erlang files
cd ${SP_QT_APP_SRC_DIR}/../../server/erlang
erlc osc.erl
erlc pi_server.erl

#Build sonic-pi server extensions, documentation, and binary.
cd ${SP_QT_APP_SRC_DIR}
../../server/ruby/bin/compile-extensions.rb
../../server/ruby/bin/i18n-tool.rb -t
cp -f ruby_help.tmpl ruby_help.h
../../server/ruby/bin/qt-doc.rb -o ruby_help.h
lrelease SonicPi.pro
qmake -qt=qt5 SonicPi.pro
make
